{
  "permissions": {
    "allow": [
      "Bash(pnpm biome check lib/ app/ components/ --max-diagnostics=50)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=4096\" pnpm build)",
      "Bash(pnpm build)",
      "Bash(pnpm prisma migrate dev --name add_performance_indexes --create-only)",
      "Bash(cat prisma/schema.prisma)",
      "Bash(node -e \"JSON.parse(require(''fs'').readFileSync(''messages/zh-CN.json'', ''utf-8'')); console.log(''✓ zh-CN.json is valid JSON'')\")",
      "Bash(node -e \"JSON.parse(require(''fs'').readFileSync(''messages/zh-TW.json'', ''utf-8'')); console.log(''✓ zh-TW.json is valid JSON'')\")",
      "Bash(pnpm tsc --noEmit)",
      "Bash(timeout 120 pnpm build)",
      "Bash(pnpm prisma generate)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=4096\" timeout 240 pnpm build)",
      "Bash(tee build-output.log)",
      "Bash(export NODE_OPTIONS=\"--max-old-space-size=4096\")",
      "Bash(node -e \"JSON.parse(require(''fs'').readFileSync(''zh-CN.json'', ''utf-8'')); console.log(''✓ zh-CN.json is valid JSON'')\")",
      "Bash(node -e \"JSON.parse(require(''fs'').readFileSync(''zh-TW.json'', ''utf-8'')); console.log(''✓ zh-TW.json is valid JSON'')\")",
      "Bash(timeout 180 pnpm build)",
      "Bash(tee build-test.log)",
      "Bash(cat .env.example)",
      "WebFetch(domain:market.strapi.io)",
      "WebSearch",
      "Bash(npm install strapi-plugin-strapi-algolia)",
      "Bash(pnpm add @sklinet/strapi-plugin-video-field)",
      "WebFetch(domain:www.better-auth.com)",
      "Bash(pnpm add axios)",
      "Bash(pnpm add schema-dts)",
      "Bash(pnpm test:unit --run)",
      "Bash(pnpm add -D @testing-library/user-event)",
      "Bash(pnpm test:unit input.test.tsx --run)",
      "Bash(pnpm test input.test.tsx --run)",
      "Bash(pnpm test:unit dialog.test.tsx --run)",
      "Bash(pnpm test:unit badge.test.tsx --run)",
      "Bash(pnpm test:unit pagination.test.tsx --run)",
      "Bash(pnpm test:unit components/ui/__tests__ --run)",
      "Bash(pnpm test:unit tabs.test.tsx --run)",
      "Bash(pnpm test:unit dropdown-menu.test.tsx --run)",
      "Bash(pnpm test:unit FormulaCard.test.tsx ConditionCard.test.tsx PractitionerCard.test.tsx --run)",
      "Bash(pnpm test:unit SearchBar.test.tsx SearchFilters.test.tsx --run)",
      "WebFetch(domain:www.dragonflydb.io)",
      "Bash(node -e \"const ts = require(''typescript''); const fs = require(''fs''); const content = fs.readFileSync(''lib/cache.ts'', ''utf8''); const result = ts.transpileModule(content, { compilerOptions: { module: ts.ModuleKind.CommonJS, target: ts.ScriptTarget.ES2020 } }); console.log(''✓ cache.ts compiles successfully''); process.exit(result.diagnostics && result.diagnostics.length > 0 ? 1 : 0);\")",
      "Bash(pnpm test:unit cache-tls.test.ts --run)",
      "Bash(pnpm test:unit cert-monitor.test.ts --run)",
      "Bash(if not exist \"__tests__\" mkdir __tests__)",
      "Bash(pnpm test:unit Header.test.tsx Footer.test.tsx --run)"
    ],
    "deny": [],
    "ask": []
  }
}
