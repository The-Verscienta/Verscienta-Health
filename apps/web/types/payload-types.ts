/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    herbs: Herb;
    formulas: Formula;
    conditions: Condition;
    symptoms: Symptom;
    modalities: Modality;
    practitioners: Practitioner;
    reviews: Review;
    'grok-insights': GrokInsight;
    media: Media;
    users: User;
    'audit-logs': AuditLog;
    'import-logs': ImportLog;
    'validation-reports': ValidationReport;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    herbs: HerbsSelect<false> | HerbsSelect<true>;
    formulas: FormulasSelect<false> | FormulasSelect<true>;
    conditions: ConditionsSelect<false> | ConditionsSelect<true>;
    symptoms: SymptomsSelect<false> | SymptomsSelect<true>;
    modalities: ModalitiesSelect<false> | ModalitiesSelect<true>;
    practitioners: PractitionersSelect<false> | PractitionersSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    'grok-insights': GrokInsightsSelect<false> | GrokInsightsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'audit-logs': AuditLogsSelect<false> | AuditLogsSelect<true>;
    'import-logs': ImportLogsSelect<false> | ImportLogsSelect<true>;
    'validation-reports': ValidationReportsSelect<false> | ValidationReportsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'trefle-import-state': TrefleImportState;
    'perenual-import-state': PerenualImportState;
  };
  globalsSelect: {
    'trefle-import-state': TrefleImportStateSelect<false> | TrefleImportStateSelect<true>;
    'perenual-import-state': PerenualImportStateSelect<false> | PerenualImportStateSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * Comprehensive herb database with TCM and Western herbalism properties
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "herbs".
 */
export interface Herb {
  id: number;
  /**
   * Primary common name of the herb
   */
  title: string;
  /**
   * Auto-generated URL slug
   */
  slug?: string | null;
  /**
   * General overview and description of the herb
   */
  description?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  status: 'draft' | 'published';
  /**
   * Main image displayed in listings
   */
  featuredImage?: (number | null) | Media;
  /**
   * Upload multiple herb photos at once (for detailed categorization, use "Additional Images" section below)
   */
  photoGallery?: (number | Media)[] | null;
  botanicalInfo: {
    /**
     * Binomial nomenclature (e.g., Panax ginseng)
     */
    scientificName: string;
    commonNames?:
      | {
          name: string;
          language: 'en' | 'zh-pinyin' | 'zh' | 'es' | 'native' | 'other';
          region?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Taxonomic family (e.g., Araliaceae)
     */
    family?: string | null;
    genus?: string | null;
    species?: string | null;
    /**
     * Historical or alternative scientific names
     */
    synonyms?:
      | {
          synonym?: string | null;
          id?: string | null;
        }[]
      | null;
    plantType?: ('herb' | 'shrub' | 'tree' | 'vine' | 'grass' | 'fern' | 'moss' | 'fungus' | 'lichen') | null;
    nativeRegion?:
      | {
          region?: string | null;
          id?: string | null;
        }[]
      | null;
    habitat?: string | null;
    partsUsed?:
      | (
          | 'root'
          | 'leaf'
          | 'stem'
          | 'flower'
          | 'seed'
          | 'bark'
          | 'fruit'
          | 'whole_plant'
          | 'rhizome'
          | 'bulb'
          | 'resin'
        )[]
      | null;
    botanicalDescription?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  cultivation?: {
    soilType?: string | null;
    climateZone?: string | null;
    sunlightNeeds?: ('full_sun' | 'partial_shade' | 'full_shade') | null;
    waterNeeds?: ('low' | 'moderate' | 'high') | null;
    hardinessZone?: string | null;
    propagationMethod?: string | null;
    growingSeason?: string | null;
  };
  /**
   * IUCN conservation status
   */
  conservationStatus?:
    | (
        | 'least_concern'
        | 'near_threatened'
        | 'vulnerable'
        | 'endangered'
        | 'critically_endangered'
        | 'extinct_wild'
        | 'not_evaluated'
        | 'data_deficient'
      )
    | null;
  conservationNotes?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  tcmProperties?: {
    tcmTaste?: ('sweet' | 'bitter' | 'sour' | 'pungent' | 'salty' | 'bland')[] | null;
    tcmTemperature?: ('hot' | 'warm' | 'neutral' | 'cool' | 'cold') | null;
    tcmMeridians?:
      | (
          | 'lung'
          | 'large_intestine'
          | 'stomach'
          | 'spleen'
          | 'heart'
          | 'small_intestine'
          | 'bladder'
          | 'kidney'
          | 'pericardium'
          | 'triple_burner'
          | 'gallbladder'
          | 'liver'
        )[]
      | null;
    tcmFunctions?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    /**
     * e.g., "Tonifying Herbs - Qi Tonics"
     */
    tcmCategory?: string | null;
    tcmTraditionalUses?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  westernProperties?:
    | (
        | 'adaptogen'
        | 'alterative'
        | 'analgesic'
        | 'anti_inflammatory'
        | 'antimicrobial'
        | 'antioxidant'
        | 'antispasmodic'
        | 'astringent'
        | 'bitter'
        | 'carminative'
        | 'demulcent'
        | 'diaphoretic'
        | 'diuretic'
        | 'expectorant'
        | 'hepatic'
        | 'nervine'
        | 'sedative'
        | 'stimulant'
        | 'tonic'
        | 'vulnerary'
      )[]
    | null;
  therapeuticUses?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  traditionalAmericanUses?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  nativeAmericanUses?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  activeConstituents?:
    | {
        compoundName: string;
        /**
         * e.g., "Ginsenosides", "Alkaloids", "Flavonoids"
         */
        compoundClass?: string | null;
        percentage?: number | null;
        effects?: string | null;
        id?: string | null;
      }[]
    | null;
  pharmacologicalEffects?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  clinicalStudies?:
    | {
        title: string;
        year?: number | null;
        summary?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        /**
         * Link to full study
         */
        url?: string | null;
        doi?: string | null;
        conclusion?: string | null;
        id?: string | null;
      }[]
    | null;
  dosageForms?:
    | (
        | 'tincture'
        | 'tea'
        | 'decoction'
        | 'capsule'
        | 'tablet'
        | 'powder'
        | 'extract'
        | 'essential_oil'
        | 'poultice'
        | 'salve'
        | 'syrup'
        | 'compress'
      )[]
    | null;
  recommendedDosage?:
    | {
        form: 'tincture' | 'tea' | 'decoction' | 'capsule' | 'tablet' | 'powder' | 'extract';
        /**
         * e.g., "1-2 mL", "500mg", "1 cup"
         */
        amount: string;
        /**
         * e.g., "2-3 times daily"
         */
        frequency?: string | null;
        /**
         * e.g., "Up to 3 months"
         */
        duration?: string | null;
        /**
         * e.g., "Adults", "Children 6-12"
         */
        population?: string | null;
        notes?: string | null;
        id?: string | null;
      }[]
    | null;
  preparationMethods?:
    | {
        methodType: 'decoction' | 'infusion' | 'tincture' | 'powder' | 'poultice' | 'extract' | 'oil_infusion';
        instructions: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        /**
         * Preparation time
         */
        time?: string | null;
        yield?: string | null;
        storage?: string | null;
        id?: string | null;
      }[]
    | null;
  safetyInfo?: {
    contraindications?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    drugInteractions?:
      | {
          drugName: string;
          interactionType: 'major' | 'moderate' | 'minor';
          description: string;
          mechanism?: string | null;
          id?: string | null;
        }[]
      | null;
    sideEffects?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    toxicityLevel?: ('none' | 'low' | 'moderate' | 'high' | 'severe') | null;
    toxicityNotes?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    allergenicPotential?: ('none' | 'low' | 'moderate' | 'high') | null;
  };
  images?:
    | {
        image: number | Media;
        imageType?:
          | ('whole_plant' | 'flower' | 'leaf' | 'root' | 'bark' | 'seed' | 'dried' | 'habitat' | 'preparation')
          | null;
        id?: string | null;
      }[]
    | null;
  videos?:
    | {
        title?: string | null;
        /**
         * Just the ID, not the full URL (e.g., "dQw4w9WgXcQ")
         */
        youtubeId: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  relatedHerbs?: (number | Herb)[] | null;
  substituteHerbs?: (number | Herb)[] | null;
  conditionsTreated?: (number | Condition)[] | null;
  /**
   * Auto-calculated from reviews
   */
  averageRating?: number | null;
  reviewCount?: number | null;
  /**
   * Auto-generated unique identifier (H-0001)
   */
  herbId?: string | null;
  peerReviewStatus: 'draft' | 'in_review' | 'peer_reviewed' | 'expert_verified' | 'published' | 'needs_update';
  /**
   * Additional keywords for search optimization
   */
  searchTags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?: string | null;
  credit?: string | null;
  license?: ('public_domain' | 'cc0' | 'cc_by' | 'cc_by_sa' | 'cc_by_nc' | 'all_rights_reserved' | 'other') | null;
  tags?: string[] | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    hero?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "conditions".
 */
export interface Condition {
  id: number;
  title: string;
  slug?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  featuredImage?: (number | null) | Media;
  symptoms?:
    | {
        symptom?: string | null;
        id?: string | null;
      }[]
    | null;
  severity?: ('mild' | 'moderate' | 'severe' | 'life_threatening') | null;
  category?:
    | (
        | 'digestive'
        | 'respiratory'
        | 'cardiovascular'
        | 'musculoskeletal'
        | 'nervous'
        | 'immune'
        | 'endocrine'
        | 'skin'
        | 'mental'
        | 'other'
      )
    | null;
  /**
   * e.g., "Spleen Qi Deficiency", "Liver Qi Stagnation"
   */
  tcmPattern?: string | null;
  /**
   * Western medical name or ICD code
   */
  westernDiagnosis?: string | null;
  prevalence?: string | null;
  conventionalTreatments?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  complementaryApproaches?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  relatedHerbs?: (number | Herb)[] | null;
  relatedFormulas?: (number | Formula)[] | null;
  relatedSymptoms?: (number | Symptom)[] | null;
  preventionTips?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  lifestyleRecommendations?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  dietaryAdvice?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Red flags requiring immediate medical attention
   */
  whenToSeekHelp?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  status: 'draft' | 'published';
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Traditional and modern herbal formulas
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "formulas".
 */
export interface Formula {
  id: number;
  /**
   * e.g., "Four Gentlemen Decoction", "Relaxation Blend"
   */
  title: string;
  slug?: string | null;
  /**
   * Historical context, traditional uses, etc.
   */
  description?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Brief summary (1-2 sentences)
   */
  shortDescription?: string | null;
  featuredImage?: (number | null) | Media;
  ingredients: {
    herb: number | Herb;
    quantity: number;
    unit: 'g' | 'mg' | 'oz' | 'ml' | 'tsp' | 'tbsp' | 'drops' | 'parts';
    /**
     * Auto-calculated if total weight is provided
     */
    percentage?: number | null;
    role?: ('chief' | 'deputy' | 'assistant' | 'envoy') | null;
    id?: string | null;
  }[];
  totalWeight?: number | null;
  totalWeightUnit?: ('g' | 'mg' | 'oz' | 'ml') | null;
  preparationInstructions?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  dosage?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  useCases?:
    | {
        useCase?: string | null;
        id?: string | null;
      }[]
    | null;
  relatedConditions?: (number | Condition)[] | null;
  tradition?: ('tcm' | 'ayurveda' | 'western' | 'native_american' | 'modern' | 'other') | null;
  /**
   * e.g., "Qi Tonifying", "Blood Nourishing"
   */
  category?: string | null;
  /**
   * e.g., "Shang Han Lun", "Bencao Gangmu"
   */
  historicalText?: string | null;
  modernAdaptations?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  contraindications?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  sideEffects?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  status: 'draft' | 'published';
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "symptoms".
 */
export interface Symptom {
  id: number;
  title: string;
  slug?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  category?:
    | ('physical' | 'mental' | 'digestive' | 'respiratory' | 'pain' | 'skin' | 'sleep' | 'energy' | 'other')
    | null;
  severity?: ('mild' | 'moderate' | 'severe')[] | null;
  duration?: ('acute' | 'subacute' | 'chronic')[] | null;
  relatedConditions?: (number | Condition)[] | null;
  relatedHerbs?: (number | Herb)[] | null;
  tcmInterpretation?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  westernInterpretation?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * When this symptom indicates need for immediate medical attention
   */
  redFlags?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  commonCauses?:
    | {
        cause?: string | null;
        id?: string | null;
      }[]
    | null;
  status: 'draft' | 'published';
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modalities".
 */
export interface Modality {
  id: number;
  /**
   * e.g., "Traditional Chinese Medicine", "Ayurveda"
   */
  title: string;
  slug?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  featuredImage?: (number | null) | Media;
  shortDescription?: string | null;
  history?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  principles?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * How practitioners assess patients
   */
  diagnosticMethods?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  treatmentModalities?:
    | {
        /**
         * e.g., "Acupuncture", "Herbal Medicine", "Massage"
         */
        approach?: string | null;
        id?: string | null;
      }[]
    | null;
  excelsAt?:
    | {
        condition?: string | null;
        id?: string | null;
      }[]
    | null;
  benefits?:
    | {
        benefit: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  relatedConditions?: (number | Condition)[] | null;
  /**
   * Herbs commonly used in this modality
   */
  relatedHerbs?: (number | Herb)[] | null;
  /**
   * How to become a practitioner
   */
  trainingRequirements?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  certificationBodies?:
    | {
        organization?: string | null;
        id?: string | null;
      }[]
    | null;
  researchEvidence?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  safetyConsiderations?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  typicalSession?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * e.g., "$75-$150 per session"
   */
  costRange?: string | null;
  status: 'draft' | 'published';
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "practitioners".
 */
export interface Practitioner {
  id: number;
  name: string;
  slug?: string | null;
  email: string;
  phone?: string | null;
  /**
   * Full URL including https://
   */
  website?: string | null;
  profileImage?: (number | null) | Media;
  /**
   * Additional photos of practice, clinic, or treatments (bulk upload supported)
   */
  photos?: (number | Media)[] | null;
  bio?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  credentials?:
    | {
        /**
         * e.g., "L.Ac.", "MSOM", "RH (AHG)"
         */
        credential?: string | null;
        id?: string | null;
      }[]
    | null;
  yearsExperience?: number | null;
  practiceType?: ('solo' | 'group' | 'clinic' | 'hospital' | 'online') | null;
  modalities: (number | Modality)[];
  specialties?:
    | {
        specialty?: string | null;
        id?: string | null;
      }[]
    | null;
  languagesSpoken?:
    | {
        language?: string | null;
        id?: string | null;
      }[]
    | null;
  address?: {
    street?: string | null;
    city?: string | null;
    state?: string | null;
    zipCode?: string | null;
    country?: string | null;
    /**
     * Auto-geocoded
     */
    latitude?: number | null;
    /**
     * Auto-geocoded
     */
    longitude?: number | null;
  };
  /**
   * e.g., "50 mile radius", "California only"
   */
  serviceArea?: string | null;
  acceptsInsurance?: boolean | null;
  insuranceProviders?:
    | {
        provider?: string | null;
        id?: string | null;
      }[]
    | null;
  offersVirtualConsults?: boolean | null;
  /**
   * Link to online booking system
   */
  bookingUrl?: string | null;
  pricing?: {
    /**
     * In USD
     */
    initialConsult?: number | null;
    followUp?: number | null;
    currency?: ('USD' | 'EUR' | 'GBP' | 'CAD' | 'AUD') | null;
    notes?: string | null;
  };
  /**
   * e.g., "Monday-Friday, 9am-5pm"
   */
  availability?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  treatmentApproach?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  verificationStatus: 'pending' | 'verified' | 'suspended';
  verifiedDate?: string | null;
  featured?: boolean | null;
  /**
   * Auto-calculated from reviews
   */
  averageRating?: number | null;
  reviewCount?: number | null;
  status: 'active' | 'inactive';
  /**
   * Link to user account if practitioner has one
   */
  user?: (number | null) | User;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  role: 'admin' | 'editor' | 'peer_reviewer' | 'herbalist' | 'practitioner' | 'user';
  profileImage?: (number | null) | Media;
  preferences?: {
    language?: ('en' | 'es' | 'zh-CN' | 'zh-TW') | null;
    theme?: ('light' | 'dark' | 'system') | null;
    newsletter?: boolean | null;
  };
  savedHerbs?: (number | Herb)[] | null;
  savedFormulas?: (number | Formula)[] | null;
  savedPractitioners?: (number | Practitioner)[] | null;
  lastLogin?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  rating: number;
  /**
   * Optional short title for the review
   */
  title?: string | null;
  comment: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  reviewedEntityType: 'herb' | 'formula' | 'practitioner' | 'modality';
  /**
   * ID of the herb, formula, practitioner, or modality being reviewed
   */
  reviewedEntityId: string;
  helpful?: number | null;
  verified?: boolean | null;
  author: number | User;
  /**
   * How the author name appears publicly
   */
  authorName?: string | null;
  moderationStatus: 'pending' | 'approved' | 'rejected' | 'flagged';
  moderatorNotes?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grok-insights".
 */
export interface GrokInsight {
  id: number;
  /**
   * Auto-generated summary of the insight
   */
  title?: string | null;
  slug?: string | null;
  /**
   * Original symptom/question data
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  analysis?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  recommendations?:
    | {
        type?: ('herb' | 'formula' | 'modality' | 'practitioner' | 'lifestyle') | null;
        /**
         * ID of the recommended item (if applicable)
         */
        entityId?: string | null;
        reasoning?: string | null;
        confidence?: number | null;
        id?: string | null;
      }[]
    | null;
  followUpQuestions?:
    | {
        question?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Auto-added standard medical disclaimers
   */
  disclaimers?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  relatedHerbs?: (number | Herb)[] | null;
  relatedConditions?: (number | Condition)[] | null;
  /**
   * To group multi-turn conversations
   */
  sessionId?: string | null;
  /**
   * User who requested this analysis (if logged in)
   */
  user?: (number | null) | User;
  grokModel?: string | null;
  /**
   * For cost tracking
   */
  tokensUsed?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * HIPAA-compliant audit logs. These records are immutable and cannot be edited or deleted.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "audit-logs".
 */
export interface AuditLog {
  id: number;
  /**
   * ID of the user performing the action
   */
  userId?: string | null;
  /**
   * Email of the user performing the action
   */
  userEmail?: string | null;
  /**
   * Role of the user at time of action
   */
  userRole?: string | null;
  /**
   * Session identifier for tracking user sessions
   */
  sessionId?: string | null;
  /**
   * Type of action performed
   */
  action:
    | 'LOGIN'
    | 'LOGOUT'
    | 'LOGIN_FAILED'
    | 'PASSWORD_CHANGE'
    | 'MFA_ENABLED'
    | 'MFA_DISABLED'
    | 'PHI_VIEW'
    | 'PHI_CREATE'
    | 'PHI_UPDATE'
    | 'PHI_DELETE'
    | 'PHI_EXPORT'
    | 'SYMPTOM_SUBMIT'
    | 'SYMPTOM_RESULT_VIEW'
    | 'PROFILE_VIEW'
    | 'PROFILE_UPDATE'
    | 'USER_CREATE'
    | 'USER_UPDATE'
    | 'USER_DELETE'
    | 'ROLE_CHANGE'
    | 'UNAUTHORIZED_ACCESS'
    | 'PERMISSION_DENIED'
    | 'SUSPICIOUS_ACTIVITY';
  /**
   * Resource affected by the action
   */
  resource?: string | null;
  /**
   * ID of the resource affected
   */
  resourceId?: string | null;
  /**
   * Type of resource (e.g., user, herb, formula)
   */
  resourceType?: string | null;
  /**
   * Additional context about the action (JSON format)
   */
  details?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * IP address of the client
   */
  ipAddress?: string | null;
  /**
   * Browser/client user agent string
   */
  userAgent?: string | null;
  /**
   * Geographic location (if available)
   */
  location?: string | null;
  /**
   * HTTP method used
   */
  method?: ('GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE') | null;
  /**
   * API endpoint or URL path
   */
  endpoint?: string | null;
  /**
   * HTTP status code returned
   */
  statusCode?: number | null;
  /**
   * Severity level of the event
   */
  severity: 'INFO' | 'WARNING' | 'ERROR' | 'CRITICAL';
  /**
   * Whether the action was successful
   */
  success: boolean;
  /**
   * Error message if action failed
   */
  errorMessage?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Logs from automated data import and sync jobs
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "import-logs".
 */
export interface ImportLog {
  id: number;
  /**
   * Type of import or sync operation
   */
  type:
    | 'trefle-sync'
    | 'trefle-progressive-import'
    | 'trefle-sync-error'
    | 'perenual-progressive-import'
    | 'perenual-sync-error'
    | 'external-import'
    | 'algolia-sync'
    | 'database-backup'
    | 'cache-cleanup'
    | 'other';
  /**
   * Results data from the import/sync operation (JSON format)
   */
  results:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * When this log was created
   */
  timestamp: string;
  /**
   * Additional notes or error details
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Data validation reports from automated quality checks
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "validation-reports".
 */
export interface ValidationReport {
  id: number;
  /**
   * Type of validation report
   */
  type:
    | 'herb-validation'
    | 'trefle-name-mismatch'
    | 'formula-validation'
    | 'image-validation'
    | 'scientific-name-validation'
    | 'other';
  /**
   * List of validation issues found
   */
  issues: {
    /**
     * ID of the herb with the issue
     */
    herbId?: string | null;
    /**
     * Name of the herb with the issue
     */
    herbName?: string | null;
    /**
     * Field name that has the issue
     */
    field?: string | null;
    /**
     * Description of the issue
     */
    issue: string;
    severity: 'error' | 'warning' | 'info';
    /**
     * Whether this issue has been resolved
     */
    resolved?: boolean | null;
    /**
     * User who resolved this issue
     */
    resolvedBy?: (number | null) | User;
    /**
     * When this issue was resolved
     */
    resolvedAt?: string | null;
    id?: string | null;
  }[];
  /**
   * Total number of errors in this report
   */
  errorCount: number;
  /**
   * Total number of warnings in this report
   */
  warningCount: number;
  /**
   * Total number of items checked
   */
  totalChecked: number;
  /**
   * When this validation was performed
   */
  timestamp: string;
  /**
   * Additional notes about this validation
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'herbs';
        value: number | Herb;
      } | null)
    | ({
        relationTo: 'formulas';
        value: number | Formula;
      } | null)
    | ({
        relationTo: 'conditions';
        value: number | Condition;
      } | null)
    | ({
        relationTo: 'symptoms';
        value: number | Symptom;
      } | null)
    | ({
        relationTo: 'modalities';
        value: number | Modality;
      } | null)
    | ({
        relationTo: 'practitioners';
        value: number | Practitioner;
      } | null)
    | ({
        relationTo: 'reviews';
        value: number | Review;
      } | null)
    | ({
        relationTo: 'grok-insights';
        value: number | GrokInsight;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'audit-logs';
        value: number | AuditLog;
      } | null)
    | ({
        relationTo: 'import-logs';
        value: number | ImportLog;
      } | null)
    | ({
        relationTo: 'validation-reports';
        value: number | ValidationReport;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "herbs_select".
 */
export interface HerbsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  status?: T;
  featuredImage?: T;
  photoGallery?: T;
  botanicalInfo?:
    | T
    | {
        scientificName?: T;
        commonNames?:
          | T
          | {
              name?: T;
              language?: T;
              region?: T;
              id?: T;
            };
        family?: T;
        genus?: T;
        species?: T;
        synonyms?:
          | T
          | {
              synonym?: T;
              id?: T;
            };
        plantType?: T;
        nativeRegion?:
          | T
          | {
              region?: T;
              id?: T;
            };
        habitat?: T;
        partsUsed?: T;
        botanicalDescription?: T;
      };
  cultivation?:
    | T
    | {
        soilType?: T;
        climateZone?: T;
        sunlightNeeds?: T;
        waterNeeds?: T;
        hardinessZone?: T;
        propagationMethod?: T;
        growingSeason?: T;
      };
  conservationStatus?: T;
  conservationNotes?: T;
  tcmProperties?:
    | T
    | {
        tcmTaste?: T;
        tcmTemperature?: T;
        tcmMeridians?: T;
        tcmFunctions?: T;
        tcmCategory?: T;
        tcmTraditionalUses?: T;
      };
  westernProperties?: T;
  therapeuticUses?: T;
  traditionalAmericanUses?: T;
  nativeAmericanUses?: T;
  activeConstituents?:
    | T
    | {
        compoundName?: T;
        compoundClass?: T;
        percentage?: T;
        effects?: T;
        id?: T;
      };
  pharmacologicalEffects?: T;
  clinicalStudies?:
    | T
    | {
        title?: T;
        year?: T;
        summary?: T;
        url?: T;
        doi?: T;
        conclusion?: T;
        id?: T;
      };
  dosageForms?: T;
  recommendedDosage?:
    | T
    | {
        form?: T;
        amount?: T;
        frequency?: T;
        duration?: T;
        population?: T;
        notes?: T;
        id?: T;
      };
  preparationMethods?:
    | T
    | {
        methodType?: T;
        instructions?: T;
        time?: T;
        yield?: T;
        storage?: T;
        id?: T;
      };
  safetyInfo?:
    | T
    | {
        contraindications?: T;
        drugInteractions?:
          | T
          | {
              drugName?: T;
              interactionType?: T;
              description?: T;
              mechanism?: T;
              id?: T;
            };
        sideEffects?: T;
        toxicityLevel?: T;
        toxicityNotes?: T;
        allergenicPotential?: T;
      };
  images?:
    | T
    | {
        image?: T;
        imageType?: T;
        id?: T;
      };
  videos?:
    | T
    | {
        title?: T;
        youtubeId?: T;
        description?: T;
        id?: T;
      };
  relatedHerbs?: T;
  substituteHerbs?: T;
  conditionsTreated?: T;
  averageRating?: T;
  reviewCount?: T;
  herbId?: T;
  peerReviewStatus?: T;
  searchTags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "formulas_select".
 */
export interface FormulasSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  shortDescription?: T;
  featuredImage?: T;
  ingredients?:
    | T
    | {
        herb?: T;
        quantity?: T;
        unit?: T;
        percentage?: T;
        role?: T;
        id?: T;
      };
  totalWeight?: T;
  totalWeightUnit?: T;
  preparationInstructions?: T;
  dosage?: T;
  useCases?:
    | T
    | {
        useCase?: T;
        id?: T;
      };
  relatedConditions?: T;
  tradition?: T;
  category?: T;
  historicalText?: T;
  modernAdaptations?: T;
  contraindications?: T;
  sideEffects?: T;
  status?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "conditions_select".
 */
export interface ConditionsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  featuredImage?: T;
  symptoms?:
    | T
    | {
        symptom?: T;
        id?: T;
      };
  severity?: T;
  category?: T;
  tcmPattern?: T;
  westernDiagnosis?: T;
  prevalence?: T;
  conventionalTreatments?: T;
  complementaryApproaches?: T;
  relatedHerbs?: T;
  relatedFormulas?: T;
  relatedSymptoms?: T;
  preventionTips?: T;
  lifestyleRecommendations?: T;
  dietaryAdvice?: T;
  whenToSeekHelp?: T;
  status?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "symptoms_select".
 */
export interface SymptomsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  category?: T;
  severity?: T;
  duration?: T;
  relatedConditions?: T;
  relatedHerbs?: T;
  tcmInterpretation?: T;
  westernInterpretation?: T;
  redFlags?: T;
  commonCauses?:
    | T
    | {
        cause?: T;
        id?: T;
      };
  status?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modalities_select".
 */
export interface ModalitiesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  featuredImage?: T;
  shortDescription?: T;
  history?: T;
  principles?: T;
  diagnosticMethods?: T;
  treatmentModalities?:
    | T
    | {
        approach?: T;
        id?: T;
      };
  excelsAt?:
    | T
    | {
        condition?: T;
        id?: T;
      };
  benefits?:
    | T
    | {
        benefit?: T;
        description?: T;
        id?: T;
      };
  relatedConditions?: T;
  relatedHerbs?: T;
  trainingRequirements?: T;
  certificationBodies?:
    | T
    | {
        organization?: T;
        id?: T;
      };
  researchEvidence?: T;
  safetyConsiderations?: T;
  typicalSession?: T;
  costRange?: T;
  status?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "practitioners_select".
 */
export interface PractitionersSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  email?: T;
  phone?: T;
  website?: T;
  profileImage?: T;
  photos?: T;
  bio?: T;
  credentials?:
    | T
    | {
        credential?: T;
        id?: T;
      };
  yearsExperience?: T;
  practiceType?: T;
  modalities?: T;
  specialties?:
    | T
    | {
        specialty?: T;
        id?: T;
      };
  languagesSpoken?:
    | T
    | {
        language?: T;
        id?: T;
      };
  address?:
    | T
    | {
        street?: T;
        city?: T;
        state?: T;
        zipCode?: T;
        country?: T;
        latitude?: T;
        longitude?: T;
      };
  serviceArea?: T;
  acceptsInsurance?: T;
  insuranceProviders?:
    | T
    | {
        provider?: T;
        id?: T;
      };
  offersVirtualConsults?: T;
  bookingUrl?: T;
  pricing?:
    | T
    | {
        initialConsult?: T;
        followUp?: T;
        currency?: T;
        notes?: T;
      };
  availability?: T;
  treatmentApproach?: T;
  verificationStatus?: T;
  verifiedDate?: T;
  featured?: T;
  averageRating?: T;
  reviewCount?: T;
  status?: T;
  user?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  rating?: T;
  title?: T;
  comment?: T;
  reviewedEntityType?: T;
  reviewedEntityId?: T;
  helpful?: T;
  verified?: T;
  author?: T;
  authorName?: T;
  moderationStatus?: T;
  moderatorNotes?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grok-insights_select".
 */
export interface GrokInsightsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  input?: T;
  analysis?: T;
  recommendations?:
    | T
    | {
        type?: T;
        entityId?: T;
        reasoning?: T;
        confidence?: T;
        id?: T;
      };
  followUpQuestions?:
    | T
    | {
        question?: T;
        id?: T;
      };
  disclaimers?: T;
  relatedHerbs?: T;
  relatedConditions?: T;
  sessionId?: T;
  user?: T;
  grokModel?: T;
  tokensUsed?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  credit?: T;
  license?: T;
  tags?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        hero?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  profileImage?: T;
  preferences?:
    | T
    | {
        language?: T;
        theme?: T;
        newsletter?: T;
      };
  savedHerbs?: T;
  savedFormulas?: T;
  savedPractitioners?: T;
  lastLogin?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "audit-logs_select".
 */
export interface AuditLogsSelect<T extends boolean = true> {
  userId?: T;
  userEmail?: T;
  userRole?: T;
  sessionId?: T;
  action?: T;
  resource?: T;
  resourceId?: T;
  resourceType?: T;
  details?: T;
  ipAddress?: T;
  userAgent?: T;
  location?: T;
  method?: T;
  endpoint?: T;
  statusCode?: T;
  severity?: T;
  success?: T;
  errorMessage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "import-logs_select".
 */
export interface ImportLogsSelect<T extends boolean = true> {
  type?: T;
  results?: T;
  timestamp?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "validation-reports_select".
 */
export interface ValidationReportsSelect<T extends boolean = true> {
  type?: T;
  issues?:
    | T
    | {
        herbId?: T;
        herbName?: T;
        field?: T;
        issue?: T;
        severity?: T;
        resolved?: T;
        resolvedBy?: T;
        resolvedAt?: T;
        id?: T;
      };
  errorCount?: T;
  warningCount?: T;
  totalChecked?: T;
  timestamp?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Tracks the progress of importing plant data from Trefle API
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trefle-import-state".
 */
export interface TrefleImportState {
  id: number;
  /**
   * Current page being imported from Trefle API
   */
  currentPage: number;
  /**
   * Whether the import has completed all pages
   */
  isComplete?: boolean | null;
  /**
   * Last time the import job ran
   */
  lastRunAt?: string | null;
  /**
   * Last time the import completed all pages
   */
  lastCompletedAt?: string | null;
  /**
   * Total number of plants imported so far
   */
  totalPlantsImported?: number | null;
  /**
   * Total number of new herbs created
   */
  totalHerbsCreated?: number | null;
  /**
   * Total number of existing herbs updated
   */
  totalHerbsUpdated?: number | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Tracks the progress of importing plant data from Perenual API
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "perenual-import-state".
 */
export interface PerenualImportState {
  id: number;
  /**
   * Current page being imported from Perenual API
   */
  currentPage: number;
  /**
   * Whether the import has completed all pages
   */
  isComplete?: boolean | null;
  /**
   * Last time the import job ran
   */
  lastRunAt?: string | null;
  /**
   * Last time the import completed all pages
   */
  lastCompletedAt?: string | null;
  /**
   * Total number of plants imported so far
   */
  totalPlantsImported?: number | null;
  /**
   * Total number of new herbs created
   */
  totalHerbsCreated?: number | null;
  /**
   * Total number of existing herbs updated
   */
  totalHerbsUpdated?: number | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trefle-import-state_select".
 */
export interface TrefleImportStateSelect<T extends boolean = true> {
  currentPage?: T;
  isComplete?: T;
  lastRunAt?: T;
  lastCompletedAt?: T;
  totalPlantsImported?: T;
  totalHerbsCreated?: T;
  totalHerbsUpdated?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "perenual-import-state_select".
 */
export interface PerenualImportStateSelect<T extends boolean = true> {
  currentPage?: T;
  isComplete?: T;
  lastRunAt?: T;
  lastCompletedAt?: T;
  totalPlantsImported?: T;
  totalHerbsCreated?: T;
  totalHerbsUpdated?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}

// NOTE: This module augmentation is commented out because 'payload' is not a dependency in the web app
// Uncomment if you need to use Payload types in the web app
// declare module 'payload' {
//   export interface GeneratedTypes extends Config {}
// }