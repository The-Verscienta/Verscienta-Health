# =============================================================================
# Verscienta Health - Web App Environment Variables
# =============================================================================

# App Configuration
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_WEB_URL=http://localhost:3000
NODE_ENV=development
PORT=3000

# Payload CMS API
PAYLOAD_PUBLIC_SERVER_URL=http://localhost:3001
NEXT_PUBLIC_CMS_URL=http://localhost:3001

# Database (PostgreSQL 17+)
# Local development (no SSL)
DATABASE_URL=postgresql://user:password@localhost:5432/verscienta_health

# Production with SSL (REQUIRED for HIPAA compliance)
# DATABASE_URL=postgresql://user:password@host:5432/verscienta_health?sslmode=verify-full&sslrootcert=/path/to/ca-certificate.crt

# Supabase (recommended - includes encryption at rest, SSL, backups)
# DATABASE_URL=postgresql://postgres.xxxxx:password@aws-0-us-east-1.pooler.supabase.com:6543/postgres?sslmode=verify-full&pgbouncer=true

# Database provider (for encryption detection)
# Options: 'aws-rds', 'digitalocean', 'supabase', 'render', 'custom'
DATABASE_PROVIDER=custom

# Database Encryption at Rest (HIPAA - optional for self-hosted)
# Generate with: openssl rand -base64 32
# DATABASE_ENCRYPTION_KEY=

# Better Auth
BETTER_AUTH_SECRET=your-secret-key-here-generate-a-secure-random-string
BETTER_AUTH_URL=http://localhost:3000

# Legacy Auth Variables (if needed for compatibility)
# AUTH_SECRET=your-auth-secret
# AUTH_URL=http://localhost:3000

# OAuth Providers (Optional)
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# Algolia Search
NEXT_PUBLIC_ALGOLIA_APP_ID=your-algolia-app-id
NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY=your-algolia-search-api-key

# Cloudflare R2 Storage (S3-compatible)
CLOUDFLARE_ACCOUNT_ID=your-cloudflare-account-id
CLOUDFLARE_ACCESS_KEY_ID=your-access-key-id
CLOUDFLARE_SECRET_ACCESS_KEY=your-secret-access-key
CLOUDFLARE_BUCKET_NAME=verscienta-media
CLOUDFLARE_ACCOUNT_HASH=your-account-hash-for-image-urls

# Image Optimization with Cloudflare Images CDN
# Enable this for automatic image optimization, format conversion (WebP/AVIF), and CDN delivery
# Cost: $5/month for 100K images (significant bandwidth savings vs self-hosting)
# See: docs/ENABLE_CLOUDFLARE_IMAGES.md for setup guide
CLOUDFLARE_IMAGES_ENABLED=true
NEXT_PUBLIC_CLOUDFLARE_ACCOUNT_ID=your-cloudflare-account-id
NEXT_PUBLIC_CLOUDFLARE_IMAGES_DELIVERY_URL=https://imagedelivery.net
CLOUDFLARE_ACCOUNT_HASH=your-account-hash-for-image-urls
CLOUDFLARE_IMAGES_API_TOKEN=your-cloudflare-images-api-token

# Grok AI (xAI)
GROK_API_KEY=your-grok-api-key

# Email Service (Resend)
RESEND_API_KEY=re_your_resend_api_key_here
RESEND_FROM_EMAIL=noreply@verscienta.com

# Cloudflare Turnstile (Bot Protection)
NEXT_PUBLIC_TURNSTILE_SITE_KEY=your-turnstile-site-key
TURNSTILE_SECRET_KEY=your-turnstile-secret-key

# =============================================================================
# DragonflyDB / Redis Configuration
# =============================================================================
# Used for: Rate limiting, caching, session storage, account lockout
# See: docs/DRAGONFLYDB_SETUP.md for comprehensive setup guide
# See: docs/DRAGONFLYDB_TLS_SECURITY.md for TLS/SSL security configuration

# Option 1: Connection URL (Recommended - single variable)
# Plain connection (development):
# REDIS_URL=redis://:password@localhost:6379/0
#
# TLS connection (production):
# REDIS_URL=rediss://:password@dragonfly.verscienta.com:6379/0
REDIS_URL=

# Option 2: Individual connection parameters (fallback)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# TLS/SSL Configuration
# Enable TLS (use 'true' when using individual parameters, or use rediss:// in REDIS_URL)
REDIS_TLS=false

# TLS Version Enforcement (REQUIRED for PCI DSS 3.2+ and HIPAA compliance)
# Minimum TLS version - defaults to TLSv1.2 (recommended)
# Options: TLSv1.2, TLSv1.3
REDIS_TLS_MIN_VERSION=TLSv1.2

# Maximum TLS version - defaults to TLSv1.3 (latest and most secure)
# Options: TLSv1.2, TLSv1.3
REDIS_TLS_MAX_VERSION=TLSv1.3

# Client Certificate Authentication (mTLS - Optional, most secure)
# Uncomment to enable mutual TLS authentication (no password needed)
# REDIS_TLS_CA_FILE=/app/certs/ca.crt        # CA root certificate
# REDIS_TLS_CERT_FILE=/app/certs/client.crt  # Client certificate
# REDIS_TLS_KEY_FILE=/app/certs/client.key   # Client private key

# Certificate Expiration Monitoring
# Automated monitoring of TLS certificate expiration for DragonflyDB/Redis
# Prevents service disruption from expired certificates

# Enable/disable certificate monitoring (default: enabled in production)
# Set to 'false' to disable monitoring
CERT_MONITOR_ENABLED=true

# Warning threshold - send alerts when certificate expires within this many days
# Default: 30 days (recommended minimum for certificate renewal)
CERT_EXPIRY_WARNING_DAYS=30

# Critical threshold - send urgent alerts when certificate expires within this many days
# Default: 7 days (last chance to renew before expiration)
CERT_EXPIRY_CRITICAL_DAYS=7

# Email Notifications (Optional)
# Send expiration alerts via email (requires Resend API key)
# ALERT_EMAIL=admin@verscienta.com

# Slack Notifications (Optional)
# Send expiration alerts to Slack channel
# Get webhook URL from: https://api.slack.com/messaging/webhooks
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXX

# Custom Webhook Notifications (Optional)
# Send expiration alerts to custom webhook endpoint (JSON POST)
# CERT_WEBHOOK_URL=https://your-monitoring-system.com/webhooks/cert-expiry

# Upstash Redis (Serverless alternative - not recommended for production due to cost)
# REDIS_TOKEN=your-upstash-token

# Security & HIPAA Compliance
SESSION_TIMEOUT=86400  # 24 hours for general sessions
PHI_SESSION_TIMEOUT=900  # 15 minutes idle timeout for PHI pages
REQUIRE_MFA_FOR_ADMIN=true
REQUIRE_MFA_FOR_PHI_ACCESS=false  # Recommended to enable in production

# Mobile App Configuration (New!)
MOBILE_OFFLINE_MODE=false
MOBILE_PUSH_NOTIFICATIONS=false
# MIN_SUPPORTED_APP_VERSION=1.0.0

# CORS & Security
# Additional allowed origins for mobile apps (comma-separated)
# ALLOWED_CORS_ORIGINS=verscienta-app://,capacitor://localhost

# Analytics (automatically enabled on Vercel)
# NEXT_PUBLIC_VERCEL_ANALYTICS_ID=

# Sentry Error Tracking
SENTRY_DSN=your-sentry-dsn-here
NEXT_PUBLIC_SENTRY_DSN=your-sentry-dsn-here
SENTRY_ORG=your-sentry-org-name
SENTRY_PROJECT=your-sentry-project-name
# SENTRY_AUTH_TOKEN=your-sentry-auth-token-for-uploading-source-maps

# Development Tools
# DEBUG=payload:*
# NEXT_TELEMETRY_DISABLED=1
