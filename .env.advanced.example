# ==============================================
# ADVANCED FEATURES - ENVIRONMENT VARIABLES
# ==============================================
# This file contains environment variables for advanced features.
# Copy the relevant sections to your .env file and configure as needed.
# See docs/ADVANCED_FEATURES.md for detailed documentation.

# ----------------------------------------------
# REDIS CACHING (DragonflyDB)
# ----------------------------------------------
# DragonflyDB is a high-performance, drop-in Redis replacement
# Documentation: https://www.dragonflydb.io/docs
# Required for: Caching, Rate Limiting

# DragonflyDB connection settings
REDIS_HOST=localhost                    # DragonflyDB host
REDIS_PORT=6379                         # Default DragonflyDB port
REDIS_PASSWORD=                         # Optional password (recommended for production)
REDIS_DB=0                              # Database number (0-15)

# DragonflyDB Docker deployment (quick start):
# docker run -d --name dragonfly -p 6379:6379 docker.dragonflydb.io/dragonflydb/dragonfly
#
# With password:
# docker run -d --name dragonfly -p 6379:6379 \
#   docker.dragonflydb.io/dragonflydb/dragonfly --requirepass=your-secure-password
#
# With persistence:
# docker run -d --name dragonfly -p 6379:6379 \
#   -v /data/dragonfly:/data \
#   docker.dragonflydb.io/dragonflydb/dragonfly \
#   --dir /data --dbfilename dump.rdb

# ----------------------------------------------
# MULTI-FACTOR AUTHENTICATION (MFA)
# ----------------------------------------------
# Required for: TOTP-based MFA for admin/practitioner accounts
# Generate a secure random string (minimum 32 characters)
BETTER_AUTH_SECRET=generate-a-secure-random-string-here
BETTER_AUTH_URL=https://verscienta.com

# ----------------------------------------------
# DATABASE BACKUPS
# ----------------------------------------------
# Enable automated daily database backups
ENABLE_AUTO_BACKUP=true

# Directory to store backups (default: ./backups)
BACKUP_DIR=./backups

# Compress backups using gzip (recommended)
COMPRESS_BACKUPS=true

# Upload backups to cloud storage (S3, R2, etc.)
BACKUP_UPLOAD_ENABLED=false

# Number of backups to retain (default: 7)
BACKUP_RETENTION_COUNT=7

# AWS S3 Configuration (optional, for backup uploads)
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# BACKUP_BUCKET=verscienta-backups

# ----------------------------------------------
# EXTERNAL DATA IMPORT
# ----------------------------------------------
# Enable automated data import from external sources
ENABLE_DATA_IMPORT=true

# Enable PubChem chemical compound import
ENABLE_PUBCHEM_IMPORT=true

# Add your TCM database API credentials here
# TCM_DATABASE_API_KEY=your-api-key
# TCM_DATABASE_URL=https://tcm-api.example.com

# ----------------------------------------------
# TREFLE BOTANICAL DATABASE
# ----------------------------------------------
# Trefle is a free botanical database API with 1M+ plants
# Sign up at https://trefle.io/ for a free API key
TREFLE_API_KEY=your-trefle-api-key-here

# Enable progressive import of all Trefle plant data
# This will import all 1M+ plants from Trefle over time
# Runs every minute, respects 120 req/min rate limit
# WARNING: This will create many draft herbs - review before enabling
ENABLE_TREFLE_IMPORT=false

# Trefle sync (enriches existing herbs with Trefle data)
# Automatically enabled if TREFLE_API_KEY is set
# Runs weekly on Wednesday at 3 AM

# ----------------------------------------------
# PERENUAL PLANT DATABASE
# ----------------------------------------------
# Perenual is a plant database API with 10,000+ plants
# Including cultivation tips, pest info, and care guides
# Sign up at https://perenual.com/docs/api for a free API key
PERENUAL_API_KEY=your-perenual-api-key-here

# Enable progressive import of all Perenual plant data
# This will import all 10,000+ plants from Perenual over time
# Runs every minute with rate limiting
# Automatically checks for duplicates with Trefle imports
# WARNING: This will create many draft herbs - review before enabling
ENABLE_PERENUAL_IMPORT=false

# Note: Both Trefle and Perenual imports use deduplication
# to prevent creating duplicate herbs. They will merge data
# from both sources into existing herbs when possible.

# ----------------------------------------------
# DIGEST EMAILS
# ----------------------------------------------
# Enable weekly digest emails to subscribers
ENABLE_DIGEST_EMAILS=true

# Resend API Configuration (required for emails)
# Sign up at https://resend.com
RESEND_API_KEY=re_your_api_key_here
RESEND_FROM_EMAIL=noreply@verscienta.com

# ----------------------------------------------
# SITEMAP GENERATION
# ----------------------------------------------
# Directory to save generated sitemap (default: ./public)
SITEMAP_DIR=./public

# Ping search engines when sitemap updates (Google, Bing)
PING_SEARCH_ENGINES=true

# ----------------------------------------------
# ALGOLIA SEARCH
# ----------------------------------------------
# Required for: Automated Algolia index sync
# Sign up at https://algolia.com
ALGOLIA_APP_ID=your-algolia-app-id
ALGOLIA_ADMIN_API_KEY=your-algolia-admin-key
ALGOLIA_SEARCH_API_KEY=your-algolia-search-key

# Index names (can customize)
# ALGOLIA_HERBS_INDEX=herbs_index
# ALGOLIA_FORMULAS_INDEX=formulas_index
# ALGOLIA_CONDITIONS_INDEX=conditions_index
# ALGOLIA_PRACTITIONERS_INDEX=practitioners_index

# ----------------------------------------------
# PERFORMANCE & MONITORING
# ----------------------------------------------
# Cache TTL (Time To Live) settings in seconds
# Uncomment to override defaults
# CACHE_TTL_HERB=3600
# CACHE_TTL_FORMULA=3600
# CACHE_TTL_SEARCH=900
# CACHE_TTL_AI=86400

# Rate Limiting settings
# Uncomment to override defaults
# RATE_LIMIT_API=100
# RATE_LIMIT_AI=20
# RATE_LIMIT_SEARCH=50
# RATE_LIMIT_WINDOW=600

# ----------------------------------------------
# DATABASE OPTIMIZATION
# ----------------------------------------------
# PostgreSQL connection with PostGIS extension
# Required for: Geospatial queries, full-text search
DATABASE_URL=postgresql://user:password@localhost:5432/verscienta

# Enable query logging (for development)
# DB_LOGGING=true

# Connection pool settings (optional)
# DB_POOL_MIN=2
# DB_POOL_MAX=10

# ----------------------------------------------
# CRON JOB CONFIGURATION
# ----------------------------------------------
# Note: Cron jobs are configured in apps/cms/src/cron/index.ts
# They are automatically enabled/disabled based on the following flags:

# Sync Algolia Index (every 6 hours) - Always enabled
# Validate Herb Data (daily at 2 AM) - Always enabled
# Import External Data (weekly on Sunday at 3 AM) - Controlled by ENABLE_DATA_IMPORT
# Sync Trefle Botanical Data (weekly on Wednesday at 3 AM) - Controlled by TREFLE_API_KEY
# Import Trefle Plant Database (every minute) - Controlled by TREFLE_API_KEY + ENABLE_TREFLE_IMPORT
# Import Perenual Plant Database (every minute) - Controlled by PERENUAL_API_KEY + ENABLE_PERENUAL_IMPORT
# Cleanup Cache (daily at 4 AM) - Always enabled
# Backup Database (daily at 1 AM) - Controlled by ENABLE_AUTO_BACKUP
# Generate Sitemap (daily at 5 AM) - Always enabled
# Send Digest Emails (weekly on Monday at 8 AM) - Controlled by ENABLE_DIGEST_EMAILS

# ----------------------------------------------
# SECURITY & AUDIT LOGGING
# ----------------------------------------------
# Audit log retention period (in days)
# AUDIT_LOG_RETENTION_DAYS=2555  # 7 years for compliance

# IP address extraction from headers (for audit logs)
# Useful when behind a proxy/load balancer
# TRUST_PROXY=true

# ----------------------------------------------
# DEVELOPMENT ONLY
# ----------------------------------------------
# Disable caching in development
# NODE_ENV=development  # Automatically disables Redis caching

# Disable rate limiting in development
# DISABLE_RATE_LIMIT=true

# Enable verbose logging
# LOG_LEVEL=debug

# ----------------------------------------------
# PRODUCTION CHECKLIST
# ----------------------------------------------
# Before deploying to production, ensure:
# ✓ DragonflyDB deployed and accessible (REDIS_HOST configured)
# ✓ REDIS_PASSWORD set for production security
# ✓ BETTER_AUTH_SECRET is a secure random string
# ✓ ENABLE_AUTO_BACKUP=true
# ✓ RESEND_API_KEY configured for emails
# ✓ ALGOLIA credentials configured
# ✓ Database migrations applied (add-indexes.sql)
# ✓ MFA enabled for all admin accounts
# ✓ Audit logging reviewed regularly
# ✓ Rate limiting tested and configured
# ✓ Backups tested (restore procedure verified)
# ✓ Cron jobs tested manually before relying on schedule
# ✓ DragonflyDB persistence enabled (--dir and --dbfilename flags)
